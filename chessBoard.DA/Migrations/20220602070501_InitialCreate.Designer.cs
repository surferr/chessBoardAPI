// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chessBoard.DA.Data.Services;

namespace chessBoard.DA.Migrations
{
    [DbContext(typeof(ChessBoardContext))]
    [Migration("20220602070501_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("chessBoard.Core.Models.ChessBoard", b =>
                {
                    b.Property<int>("ChessBoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChessBoardId");

                    b.ToTable("ChessBoards");
                });

            modelBuilder.Entity("chessBoard.Core.Models.ChessPiece", b =>
                {
                    b.Property<int>("ChessPieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChessBoardId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ChessPieceId");

                    b.HasIndex("ChessBoardId");

                    b.ToTable("ChessPiece");
                });

            modelBuilder.Entity("chessBoard.Core.Models.ChessPiece", b =>
                {
                    b.HasOne("chessBoard.Core.Models.ChessBoard", "ChessBoard")
                        .WithMany("ChessPieces")
                        .HasForeignKey("ChessBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChessBoard");
                });

            modelBuilder.Entity("chessBoard.Core.Models.ChessBoard", b =>
                {
                    b.Navigation("ChessPieces");
                });
#pragma warning restore 612, 618
        }
    }
}
